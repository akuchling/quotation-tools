#!/usr/bin/env python3
#
# qtgenerateids
# Copyright (C) 2002 A.M. Kuchling
#
# Reads a set of QEL files, and outputs a new QEL file to stdout
# with all the quotations given an ID of the form 'q' + a number.
# Existing IDs are left untouched and the order of quotations in the
# file is unchanged.  Comments and PIs will be lost, though.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

import sys, getopt
from qel import parse, quotation, scripts

__doc__ = """Usage: %s [options] file1.xml file2.xml ...
If no filenames are provided, standard input will be read.
Outputs a QEL file with every quotation assigned an ID.
"""

def main ():
    # Process the command-line arguments
    opts, args = getopt.getopt(sys.argv[1:], 'h',
                               ['help'])

    # Process arguments
    for opt, arg in opts:
        if opt in ['-h', '--help']:
            print(__doc__) ; sys.exit(0)

    if len(args) == 0:
        args = [sys.stdin]
    qtcoll = quotation.Collection()
    for fn in args:
        if isinstance(fn, str):
            stream = open(fn, 'r')
        else:
            stream = file
        qtcoll.extend(parse.parse(stream))

    # Add IDs where they're missing
    scripts.generate_ids(qtcoll)

    # Output the file again
    encoding = 'UTF-8'
    xml = qtcoll.as_xml(encoding)
    sys.stdout.buffer.write(xml.encode(encoding))

if __name__ == '__main__':
    main()
